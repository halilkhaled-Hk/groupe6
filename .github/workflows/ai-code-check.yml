name: AI Code Analysis

on: [push, pull_request]

jobs:
  analyze-code:
    runs-on: ubuntu-latest
    name: Analyze Project Structure
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3
      
    - name: üîç Analyze Files
      run: |
        echo "ü§ñ D√âMARRAGE ANALYSE IA"
        echo "D√©p√¥t: $GITHUB_REPOSITORY"
        echo "Commit: $GITHUB_SHA"
        echo ""
        echo "=== STRUCTURE DU PROJET ==="
        ls -la
        echo ""
        echo "=== FICHIERS TROUV√âS ==="
        
        # V√©rifier les fichiers HTML
        echo "üåê FICHIERS HTML:"
        if [ -f "index.html" ]; then
          lines=$(wc -l < index.html)
          echo "  ‚úÖ index.html ($lines lignes)"
        else
          echo "  ‚ùå index.html - MANQUANT"
        fi
        
        if [ -f "about.html" ]; then
          lines=$(wc -l < about.html)
          echo "  ‚úÖ about.html ($lines lignes)"
        else
          echo "  ‚ùå about.html - MANQUANT"
        fi
        
        # V√©rifier les fichiers JS
        echo ""
        echo "‚ö° FICHIERS JAVASCRIPT:"
        js_files=("logic.js" "buttons.js" "history.js")
        for js_file in "${js_files[@]}"; do
          if [ -f "$js_file" ]; then
            lines=$(wc -l < "$js_file")
            echo "  ‚úÖ $js_file ($lines lignes)"
          else
            echo "  ‚ùå $js_file - MANQUANT"
          fi
        done
        
        # V√©rifier les fichiers CSS
        echo ""
        echo "üé® FICHIERS CSS:"
        css_files=("style.css" "theme.css")
        for css_file in "${css_files[@]}"; do
          if [ -f "$css_file" ]; then
            lines=$(wc -l < "$css_file")
            echo "  ‚úÖ $css_file ($lines lignes)"
          else
            echo "  ‚ùå $css_file - MANQUANT"
          fi
        done
        
        echo ""
        echo "=== ANALYSE TERMIN√âE ==="
        echo "‚úÖ Workflow ex√©cut√© avec succ√®s"